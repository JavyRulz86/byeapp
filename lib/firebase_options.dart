// File generated by FlutterFire CLI.
// ignore_for_file: type=lint
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;

class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      return web;
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for android - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.iOS:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for ios - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.macOS:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for macos - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.windows:
        return windows;
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  // Variables le√≠das desde dart-define para web:
  static FirebaseOptions get web {
    const apiKey = String.fromEnvironment('FIREBASE_API_KEY', defaultValue: '');
    const appId = String.fromEnvironment('FIREBASE_APP_ID', defaultValue: '');
    const messagingSenderId = String.fromEnvironment(
        'FIREBASE_MESSAGING_SENDER_ID',
        defaultValue: '');
    const projectId =
        String.fromEnvironment('FIREBASE_PROJECT_ID', defaultValue: '');
    const authDomain =
        String.fromEnvironment('FIREBASE_AUTH_DOMAIN', defaultValue: '');
    const storageBucket =
        String.fromEnvironment('FIREBASE_STORAGE_BUCKET', defaultValue: '');
    const measurementId =
        String.fromEnvironment('FIREBASE_MEASUREMENT_ID', defaultValue: '');

    if (apiKey.isEmpty ||
        appId.isEmpty ||
        messagingSenderId.isEmpty ||
        projectId.isEmpty) {
      throw UnsupportedError(
        'Firebase Web configuration variables missing. '
        'Please provide them via --dart-define.',
      );
    }

    return FirebaseOptions(
      apiKey: apiKey,
      appId: appId,
      messagingSenderId: messagingSenderId,
      projectId: projectId,
      authDomain: authDomain,
      storageBucket: storageBucket,
      measurementId: measurementId,
    );
  }

  static const FirebaseOptions windows = FirebaseOptions(
    apiKey: 'AIzaSyBPGPtMey7IARjQE7Wouu5B9Ioyl61h_j0',
    appId: '1:1003537024990:web:7b8997451177b9af6f3f4f',
    messagingSenderId: '1003537024990',
    projectId: 'goodbye-ae882',
    authDomain: 'goodbye-ae882.firebaseapp.com',
    storageBucket: 'goodbye-ae882.firebasestorage.app',
    measurementId: 'G-4ZPXF5WJ55',
  );
}
